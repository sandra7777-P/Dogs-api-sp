{"ast":null,"code":"const regImage = /^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*\\.(jpg|jpeg|png|gif)$/i;\nconst regName = /^[a-zA-Z\\s]+$/;\nconst regNumber = /^(?:[1-9][0-9]?|100)$/;\nconst validate = formData => {\n  const errors = {};\n  if (!regImage.test(formData.image)) errors.image = \"Url image is not valid\";\n  if (!formData.image) errors.image = \"Image is required\";\n  if (!regName.test(formData.name)) errors.name = \"Name is not valid\";\n  if (!formData.name) errors.name = \"Name is required\";\n  if (!regNumber.test(formData.heightMin)) errors.heightMin = \"Value is not valit\";\n  if (!regNumber.test(formData.heightMax)) errors.heightMax = \"Value is not valit\";\n  if (!regNumber.test(formData.weightMin)) errors.weightMin = \"Value is not valit\";\n  if (!regNumber.test(formData.weightMax)) errors.weightMax = \"Value is not valit\";\n  if (!regNumber.test(formData.lifeSpan)) errors.lifeSpan = \"Value is not valit\";\n  if (Number(formData.heightMin) >= Number(formData.heightMax)) {\n    errors.heightMax = \"Minimum cannot be greater than or equal to maximum\";\n  }\n  if (!formData.heightMin && !formData.heightMax) errors.heightMin = \"Minimum height is required\";\n  if (!formData.heightMax) errors.heightMax = \"Maximum height is required\";\n  if (Number(formData.weightMin) >= Number(formData.weightMax)) errors.weightMax = \"Minimum cannot be greater than or equal to maximum\";\n  if (!formData.weightMin && !formData.weightMax) errors.weightMin = \"Minimum weight is required\";\n  if (!formData.weightMax) errors.weightMax = \"Maximum weight is required\";\n  if (!formData.lifeSpan) errors.lifeSpan = \"Life span is required\";\n  if (!formData.temperaments || formData.temperaments.length === 0) errors.temperaments = \"Not selected any value yet\";\n  return errors;\n};\nexport default validate;","map":{"version":3,"names":["regImage","regName","regNumber","validate","formData","errors","test","image","name","heightMin","heightMax","weightMin","weightMax","lifeSpan","Number","temperaments","length"],"sources":["/Users/sandra/Desktop/Dogs-api-sp/client/src/components/Form/validator.js"],"sourcesContent":["const regImage = /^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*\\.(jpg|jpeg|png|gif)$/i;\nconst regName = /^[a-zA-Z\\s]+$/;\nconst regNumber = /^(?:[1-9][0-9]?|100)$/;\n\nconst validate = (formData) => {\n    const errors = {};\n    if (!regImage.test(formData.image)) errors.image = \"Url image is not valid\";\n    if (!formData.image) errors.image = \"Image is required\";\n\n    if (!regName.test(formData.name)) errors.name = \"Name is not valid\";\n    if (!formData.name) errors.name = \"Name is required\";\n\n    if  (!regNumber.test(formData.heightMin)) errors.heightMin = \"Value is not valit\"\n    if  (!regNumber.test(formData.heightMax)) errors.heightMax = \"Value is not valit\"\n    if  (!regNumber.test(formData.weightMin)) errors.weightMin = \"Value is not valit\"\n    if  (!regNumber.test(formData.weightMax)) errors.weightMax = \"Value is not valit\"\n    if  (!regNumber.test(formData.lifeSpan)) errors.lifeSpan = \"Value is not valit\"\n\n    if (Number(formData.heightMin) >= Number(formData.heightMax)) {\n        errors.heightMax = \"Minimum cannot be greater than or equal to maximum\";\n    }\n    if (!formData.heightMin && !formData.heightMax) errors.heightMin = \"Minimum height is required\";\n    if (!formData.heightMax) errors.heightMax = \"Maximum height is required\";\n\n    if (Number(formData.weightMin) >= Number(formData.weightMax)) errors.weightMax = \"Minimum cannot be greater than or equal to maximum\";\n    if (!formData.weightMin && !formData.weightMax) errors.weightMin = \"Minimum weight is required\";\n    if (!formData.weightMax) errors.weightMax = \"Maximum weight is required\";\n\n    if (!formData.lifeSpan) errors.lifeSpan = \"Life span is required\";\n\n    if (!formData.temperaments || formData.temperaments.length === 0) errors.temperaments = \"Not selected any value yet\";\n    return errors;\n}\n\nexport default validate"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2DAA2D;AAC5E,MAAMC,OAAO,GAAG,eAAe;AAC/B,MAAMC,SAAS,GAAG,uBAAuB;AAEzC,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAC3B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAI,CAACL,QAAQ,CAACM,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,EAAEF,MAAM,CAACE,KAAK,GAAG,wBAAwB;EAC3E,IAAI,CAACH,QAAQ,CAACG,KAAK,EAAEF,MAAM,CAACE,KAAK,GAAG,mBAAmB;EAEvD,IAAI,CAACN,OAAO,CAACK,IAAI,CAACF,QAAQ,CAACI,IAAI,CAAC,EAAEH,MAAM,CAACG,IAAI,GAAG,mBAAmB;EACnE,IAAI,CAACJ,QAAQ,CAACI,IAAI,EAAEH,MAAM,CAACG,IAAI,GAAG,kBAAkB;EAEpD,IAAK,CAACN,SAAS,CAACI,IAAI,CAACF,QAAQ,CAACK,SAAS,CAAC,EAAEJ,MAAM,CAACI,SAAS,GAAG,oBAAoB;EACjF,IAAK,CAACP,SAAS,CAACI,IAAI,CAACF,QAAQ,CAACM,SAAS,CAAC,EAAEL,MAAM,CAACK,SAAS,GAAG,oBAAoB;EACjF,IAAK,CAACR,SAAS,CAACI,IAAI,CAACF,QAAQ,CAACO,SAAS,CAAC,EAAEN,MAAM,CAACM,SAAS,GAAG,oBAAoB;EACjF,IAAK,CAACT,SAAS,CAACI,IAAI,CAACF,QAAQ,CAACQ,SAAS,CAAC,EAAEP,MAAM,CAACO,SAAS,GAAG,oBAAoB;EACjF,IAAK,CAACV,SAAS,CAACI,IAAI,CAACF,QAAQ,CAACS,QAAQ,CAAC,EAAER,MAAM,CAACQ,QAAQ,GAAG,oBAAoB;EAE/E,IAAIC,MAAM,CAACV,QAAQ,CAACK,SAAS,CAAC,IAAIK,MAAM,CAACV,QAAQ,CAACM,SAAS,CAAC,EAAE;IAC1DL,MAAM,CAACK,SAAS,GAAG,oDAAoD;EAC3E;EACA,IAAI,CAACN,QAAQ,CAACK,SAAS,IAAI,CAACL,QAAQ,CAACM,SAAS,EAAEL,MAAM,CAACI,SAAS,GAAG,4BAA4B;EAC/F,IAAI,CAACL,QAAQ,CAACM,SAAS,EAAEL,MAAM,CAACK,SAAS,GAAG,4BAA4B;EAExE,IAAII,MAAM,CAACV,QAAQ,CAACO,SAAS,CAAC,IAAIG,MAAM,CAACV,QAAQ,CAACQ,SAAS,CAAC,EAAEP,MAAM,CAACO,SAAS,GAAG,oDAAoD;EACrI,IAAI,CAACR,QAAQ,CAACO,SAAS,IAAI,CAACP,QAAQ,CAACQ,SAAS,EAAEP,MAAM,CAACM,SAAS,GAAG,4BAA4B;EAC/F,IAAI,CAACP,QAAQ,CAACQ,SAAS,EAAEP,MAAM,CAACO,SAAS,GAAG,4BAA4B;EAExE,IAAI,CAACR,QAAQ,CAACS,QAAQ,EAAER,MAAM,CAACQ,QAAQ,GAAG,uBAAuB;EAEjE,IAAI,CAACT,QAAQ,CAACW,YAAY,IAAIX,QAAQ,CAACW,YAAY,CAACC,MAAM,KAAK,CAAC,EAAEX,MAAM,CAACU,YAAY,GAAG,4BAA4B;EACpH,OAAOV,MAAM;AACjB,CAAC;AAED,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}