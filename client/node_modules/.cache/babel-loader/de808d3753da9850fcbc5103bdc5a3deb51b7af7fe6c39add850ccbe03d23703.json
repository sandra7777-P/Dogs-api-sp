{"ast":null,"code":"import axios from \"axios\";\nimport { GET_DOGS, SET_PAGE, SET_TOTAL_PAGE, SEARCH_DOGS, SET_LOADING, GET_TEMPERAMENTS, CREATE_DOG, FILTER_BY_TEMPERAMENT, FILTER_BY_ORIGIN, SORT_ORDER, UPDATE_ORDER, CLEAN_FILTER, SET_CLEAN } from \"./actionType\";\nconst URL = \"http://localhost:3001/dogs\";\n\n// Acción para consultar todos los perros\nexport function allDogs() {\n  return async function (dispatch) {\n    const service = await axios(URL);\n    const allDogsData = service.data;\n    dispatch({\n      type: GET_DOGS,\n      payload: allDogsData\n    });\n    dispatch(setTotalPage());\n  };\n}\n\n// Acción para traer definir el total de páginas\nexport function setTotalPage() {\n  return {\n    type: SET_TOTAL_PAGE\n  };\n}\n\n// Acción para traer definir página actual\nexport const setPage = pageNumber => ({\n  type: SET_PAGE,\n  payload: pageNumber\n});\n\n// Acción para buscar por nombre\nexport function onSearch(name) {\n  return async function (dispatch) {\n    try {\n      dispatch(setLoading(true));\n      const service = await axios(URL + `?name=${name}`);\n      const allDogsData = service.data;\n      dispatch({\n        type: SEARCH_DOGS,\n        payload: allDogsData\n      });\n      dispatch(setTotalPage());\n    } catch (error) {\n      if (error.response.status === 404) {\n        return alert('No dog breeds found with that name');\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n}\n\n// Acción para actualizar estado de carga\nexport const setLoading = isLoading => ({\n  type: SET_LOADING,\n  payload: isLoading\n});\n\n// Acción para consultar temperamentos\nexport function allTemperaments() {\n  return async function (dispatch) {\n    try {\n      dispatch(setLoading(true));\n      const serviceTemp = await axios(\"http://localhost:3001/temperaments\");\n      const allTempData = serviceTemp.data;\n      dispatch({\n        type: GET_TEMPERAMENTS,\n        payload: allTempData\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n}\n\n// Acción para crear nuevo perro\nexport function createNewDog(payload) {\n  return async function (dispatch) {\n    try {\n      const service = await axios.post(URL, payload);\n      dispatch({\n        type: CREATE_DOG,\n        payload\n      });\n      if (service.status === 201) {\n        return alert('Succesfully created');\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        return alert('Dog breeds name already exists');\n      }\n      if (error.response.status === 404) {\n        return alert('Internal server error');\n      }\n    }\n  };\n}\n\n// Acción para filtrar por origen\nexport function filterByOrigin(option) {\n  return dispatch => {\n    dispatch({\n      type: FILTER_BY_ORIGIN,\n      payload: option\n    });\n    dispatch(setTotalPage());\n  };\n}\n;\n\n// Acción para filtrar por temperamento\nexport function filterByTemperament(option) {\n  return dispatch => {\n    dispatch({\n      type: FILTER_BY_TEMPERAMENT,\n      payload: option\n    });\n    dispatch(setTotalPage());\n  };\n}\n\n// Acción para definir ordenamiento\nexport const toggleSortOrder = () => ({\n  type: SORT_ORDER\n});\n\n// Acción para actualizar ordenamiento\nexport const updateSortedList = sortedList => ({\n  type: UPDATE_ORDER,\n  payload: sortedList\n});\n\n// Acción para actualizar estado de limpieza\nexport function setClean(isClean) {\n  return {\n    type: SET_CLEAN,\n    payload: isClean\n  };\n}\n\n// Acción para limpiar filtros\nexport function cleanFilter() {\n  return async function (dispatch) {\n    try {\n      dispatch(setClean(true));\n      dispatch({\n        type: CLEAN_FILTER\n      });\n      dispatch(setTotalPage());\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      dispatch(setClean(false));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"names":["axios","GET_DOGS","SET_PAGE","SET_TOTAL_PAGE","SEARCH_DOGS","SET_LOADING","GET_TEMPERAMENTS","CREATE_DOG","FILTER_BY_TEMPERAMENT","FILTER_BY_ORIGIN","SORT_ORDER","UPDATE_ORDER","CLEAN_FILTER","SET_CLEAN","URL","allDogs","dispatch","service","allDogsData","data","type","payload","setTotalPage","setPage","pageNumber","onSearch","name","setLoading","error","response","status","alert","isLoading","allTemperaments","serviceTemp","allTempData","console","log","createNewDog","post","filterByOrigin","option","filterByTemperament","toggleSortOrder","updateSortedList","sortedList","setClean","isClean","cleanFilter","Promise","resolve","setTimeout"],"sources":["/Users/macbookpro/Desktop/PI-Dogs SP-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\nimport { GET_DOGS, \n    SET_PAGE, \n    SET_TOTAL_PAGE, \n    SEARCH_DOGS, \n    SET_LOADING, \n    GET_TEMPERAMENTS, \n    CREATE_DOG, \n    FILTER_BY_TEMPERAMENT, \n    FILTER_BY_ORIGIN, \n    SORT_ORDER, \n    UPDATE_ORDER, \n    CLEAN_FILTER, \n    SET_CLEAN } from \"./actionType\";\n\nconst URL = \"http://localhost:3001/dogs\"\n\n// Acción para consultar todos los perros\nexport function allDogs() {\n    return async function (dispatch) {\n        const service = await axios(URL)\n        const allDogsData = service.data\n\n        dispatch({\n            type: GET_DOGS,\n            payload: allDogsData\n        })\n\n        dispatch(setTotalPage())\n    }\n}\n\n// Acción para traer definir el total de páginas\nexport function setTotalPage() {\n    return {\n        type: SET_TOTAL_PAGE\n    };\n}\n\n// Acción para traer definir página actual\nexport const setPage = (pageNumber) => ({\n    type: SET_PAGE,\n    payload: pageNumber,\n});\n\n// Acción para buscar por nombre\nexport function onSearch(name) {\n    return async function (dispatch) {\n        try {\n            dispatch(setLoading(true))\n\n            const service = await axios(URL + `?name=${name}`)\n            const allDogsData = service.data\n\n            dispatch({\n                type: SEARCH_DOGS,\n                payload: allDogsData\n            })\n\n            dispatch(setTotalPage())\n        } catch (error) {\n            if (error.response.status === 404) {\n                return alert('No dog breeds found with that name')\n            }\n        } finally {\n            dispatch(setLoading(false))\n        }\n    }\n}\n\n// Acción para actualizar estado de carga\nexport const setLoading = (isLoading) => ({\n    type: SET_LOADING,\n    payload: isLoading,\n});\n\n// Acción para consultar temperamentos\nexport function allTemperaments() {\n    return async function (dispatch) {\n        try {\n            dispatch(setLoading(true))\n\n            const serviceTemp = await axios(\"http://localhost:3001/temperaments\")\n            const allTempData = serviceTemp.data\n\n            dispatch({\n                type: GET_TEMPERAMENTS,\n                payload: allTempData\n            })\n\n        } catch (error) {\n            console.log(error)\n        } finally {\n            dispatch(setLoading(false))\n        }\n    }\n}\n\n// Acción para crear nuevo perro\nexport function createNewDog(payload) {\n    return async function (dispatch) {\n        try {\n            const service = await axios.post(URL, payload)\n\n            dispatch({\n                type: CREATE_DOG,\n                payload,\n            });\n\n            if (service.status === 201) {\n                return alert('Succesfully created')\n            }\n        } catch (error) {\n            if (error.response.status === 400) {\n                return alert('Dog breeds name already exists')\n            }\n            if (error.response.status === 404) {\n                return alert('Internal server error')\n            }\n        }\n    }\n}\n\n// Acción para filtrar por origen\nexport function filterByOrigin(option) {\n    return (dispatch) => {\n        dispatch({\n            type: FILTER_BY_ORIGIN,\n            payload: option,\n        });\n\n        dispatch(setTotalPage())\n    }\n};\n\n// Acción para filtrar por temperamento\nexport function filterByTemperament(option) {\n    return (dispatch) => {\n        dispatch({\n            type: FILTER_BY_TEMPERAMENT,\n            payload: option\n        });\n\n        dispatch(setTotalPage())\n    }\n}\n\n// Acción para definir ordenamiento\nexport const toggleSortOrder = () => ({\n    type: SORT_ORDER,\n})\n\n// Acción para actualizar ordenamiento\nexport const updateSortedList = (sortedList) => ({\n    type: UPDATE_ORDER,\n    payload: sortedList,\n})\n\n// Acción para actualizar estado de limpieza\nexport function setClean(isClean) {\n    return {\n        type: SET_CLEAN,\n        payload: isClean\n    }\n}\n\n// Acción para limpiar filtros\nexport function cleanFilter() {\n    return async function (dispatch) {\n        try {            \n            dispatch(setClean(true));\n\n            dispatch({\n                type: CLEAN_FILTER,\n            });\n\n            dispatch(setTotalPage());\n\n            await new Promise(resolve => setTimeout(resolve, 1000))\n\n            dispatch(setClean(false));\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}