{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/PI-Dogs SP-main/client/src/components/Temperament/Temperament.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { allTemperaments, filterByTemperament } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Temperament() {\n  _s();\n  const temperaments = useSelector(state => state.allTemperaments);\n  const isLoading = useSelector(state => state.isLoading);\n  const clean = useSelector(state => state.isClean);\n  const dispatch = useDispatch();\n  const [selectedTemperament, setSelectedTemperament] = useState('all');\n  useEffect(() => {\n    dispatch(allTemperaments()); // Cargar temperamentos al montar el componente\n  }, [dispatch]);\n  useEffect(() => {\n    if (clean) {\n      setSelectedTemperament('all');\n    }\n  }, [clean]);\n  const handleOptionSelect = e => {\n    const option = e.target.value;\n    setSelectedTemperament(option);\n    dispatch(filterByTemperament(option));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Temperaments:\", ' ', isLoading ? 'Loading...' : /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTemperament,\n      onChange: handleOptionSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), temperaments.map(temperament => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: temperament,\n        children: temperament\n      }, temperament, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Temperament, \"XNwuKXokVQvLVTF9Dtr4CB175RY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Temperament;\nvar _c;\n$RefreshReg$(_c, \"Temperament\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","allTemperaments","filterByTemperament","jsxDEV","_jsxDEV","Temperament","_s","temperaments","state","isLoading","clean","isClean","dispatch","selectedTemperament","setSelectedTemperament","handleOptionSelect","e","option","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","temperament","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/PI-Dogs SP-main/client/src/components/Temperament/Temperament.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { allTemperaments, filterByTemperament } from '../../redux/actions';\n\nexport default function Temperament() {\n    const temperaments = useSelector((state) => state.allTemperaments);\n    const isLoading = useSelector((state) => state.isLoading);\n    const clean = useSelector((state) => state.isClean);\n\n    const dispatch = useDispatch();\n    const [selectedTemperament, setSelectedTemperament] = useState('all');\n\n    useEffect(() => {\n        dispatch(allTemperaments()); // Cargar temperamentos al montar el componente\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (clean) {\n            setSelectedTemperament('all');\n        }\n    }, [clean]);\n\n    const handleOptionSelect = (e) => {\n        const option = e.target.value;\n        setSelectedTemperament(option);\n        dispatch(filterByTemperament(option));\n    };\n\n    return (\n        <div>\n            Temperaments:{' '}\n            {isLoading ? (\n                'Loading...'\n            ) : (\n                <select value={selectedTemperament} onChange={handleOptionSelect}>\n                    <option value=\"all\">All</option>\n                    {temperaments.map((temperament) => (\n                        <option key={temperament} value={temperament}>\n                            {temperament}\n                        </option>\n                    ))}\n                </select>\n            )}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,YAAY,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACP,eAAe,CAAC;EAClE,MAAMQ,SAAS,GAAGV,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EACzD,MAAMC,KAAK,GAAGX,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACG,OAAO,CAAC;EAEnD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAErEC,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACX,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEdd,SAAS,CAAC,MAAM;IACZ,IAAIY,KAAK,EAAE;MACPI,sBAAsB,CAAC,KAAK,CAAC;IACjC;EACJ,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMK,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7BL,sBAAsB,CAACG,MAAM,CAAC;IAC9BL,QAAQ,CAACV,mBAAmB,CAACe,MAAM,CAAC,CAAC;EACzC,CAAC;EAED,oBACIb,OAAA;IAAAgB,QAAA,GAAK,eACY,EAAC,GAAG,EAChBX,SAAS,GACN,YAAY,gBAEZL,OAAA;MAAQe,KAAK,EAAEN,mBAAoB;MAACQ,QAAQ,EAAEN,kBAAmB;MAAAK,QAAA,gBAC7DhB,OAAA;QAAQe,KAAK,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC/BlB,YAAY,CAACmB,GAAG,CAAEC,WAAW,iBAC1BvB,OAAA;QAA0Be,KAAK,EAAEQ,WAAY;QAAAP,QAAA,EACxCO;MAAW,GADHA,WAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnB,EAAA,CAzCuBD,WAAW;EAAA,QACVN,WAAW,EACdA,WAAW,EACfA,WAAW,EAERC,WAAW;AAAA;AAAA4B,EAAA,GALRvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}